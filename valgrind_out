==14057== Memcheck, a memory error detector
==14057== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==14057== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==14057== Command: ./logfind hello
==14057== 
==14057== Use of uninitialised value of size 4
==14057==    at 0x11280: get_logfind_files (logfind.c:193)
==14057==    by 0x117DF: search (logfind.c:346)
==14057==    by 0x11B3F: process_args (logfind.c:445)
==14057==    by 0x11BFB: main (logfind.c:457)
==14057== 
==14057== Invalid write of size 4
==14057==    at 0x11280: get_logfind_files (logfind.c:193)
==14057==    by 0x117DF: search (logfind.c:346)
==14057==    by 0x11B3F: process_args (logfind.c:445)
==14057==    by 0x11BFB: main (logfind.c:457)
==14057==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==14057== 
==14057== 
==14057== Process terminating with default action of signal 11 (SIGSEGV)
==14057==  Access not within mapped region at address 0x0
==14057==    at 0x11280: get_logfind_files (logfind.c:193)
==14057==    by 0x117DF: search (logfind.c:346)
==14057==    by 0x11B3F: process_args (logfind.c:445)
==14057==    by 0x11BFB: main (logfind.c:457)
==14057==  If you believe this happened as a result of a stack
==14057==  overflow in your program's main thread (unlikely but
==14057==  possible), you can try to increase the size of the
==14057==  main thread stack using the --main-stacksize= flag.
==14057==  The main thread stack size used in this run was 8388608.
==14057== 
==14057== HEAP SUMMARY:
==14057==     in use at exit: 290 bytes in 8 blocks
==14057==   total heap usage: 16 allocs, 8 frees, 4,793 bytes allocated
==14057== 
==14057== LEAK SUMMARY:
==14057==    definitely lost: 96 bytes in 2 blocks
==14057==    indirectly lost: 0 bytes in 0 blocks
==14057==      possibly lost: 0 bytes in 0 blocks
==14057==    still reachable: 194 bytes in 6 blocks
==14057==         suppressed: 0 bytes in 0 blocks
==14057== Rerun with --leak-check=full to see details of leaked memory
==14057== 
==14057== For counts of detected and suppressed errors, rerun with: -v
==14057== Use --track-origins=yes to see where uninitialised values come from
==14057== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 3)
